#!/usr/bin/env python
# The line above is important so that this file is interpreted with Python when running it.
# robot_leader, written by Elliot Potter
# Oct 2022, with other code used from last fall

# Import of python modules.
import math  # use of pi.
import tf  # library for transformations
import rospy  # module for ROS APIs
from std_msgs.msg import String
import json
from leader_follower.msg import FollowerReq
from leader_follower.srv import RequestFollowers, RequestFollowersResponse

REGISTERY_NAME = "register_followers"


class RobotLeader:
    def __init__(self):
        self.waypoint_callback = rospy.Subscriber("/waypoints", String, self.waypoint_callback)
        self.follower_requester = rospy.Publisher("/subscribe_request", FollowerReq, queue_size=1)
        # the array of points that the followers could go to
        self.waypoint_array = []
        # the array of follower points
        self.follower_array = []
        self.server = rospy.Service(REGISTERY_NAME, RequestFollowers, self.handle_request_followers)

    def waypoint_callback(self, msg):
        """Stores the waypoints"""
        json_string = msg.data
        self.waypoint_array = json.loads(json_string)

    def send_request_to_followers(self):
        """send request to robot followers for them to sign up"""
        req = FollowerReq()
        req.service_name = REGISTERY_NAME
        self.follower_requester.publish(req)

    def handle_request_followers(self, req):
        """Adds follower to the follower array"""
        name = req.robot_name
        if name not in self.follower_array:
            self.follower_array.append(name)

    def allocate_goals_robots(self):
        """
        Waits until goals have been received, and number of goals equals number of robots
        Then greedily assigns robots to goals
        """

# TODO -- allocate robots to waypoints

# TODO -- action client to assign goals to followers


if __name__ == "__main__":
    rospy.init_node('robot_leader')
    leader = RobotLeader()
    rospy.sleep(2)
    leader.send_request_to_followers()
    leader.allocate_goals_robots()

