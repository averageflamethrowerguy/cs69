#!/usr/bin/env python
# The line above is important so that this file is interpreted with Python when running it.
# robot_leader, written by Elliot Potter
# Oct 2022, with other code used from last fall

# Import of python modules.
import math  # use of pi.
import tf  # library for transformations
import rospy  # module for ROS APIs
from std_msgs.msg import String
import json
from leader_follower.srv import RequestFollowers

class RobotFollower:
    def __init__(self, bot_id):
        self.bot_id = bot_id
        self.follower_listener = rospy.Subscriber("/subscribe_request", String, self.follower_callback)
        self.has_followed = False

    def follower_callback(self, msg):
        """When we receive a follower request, we call the service with our name"""
        registry_name = msg.data
        self.has_followed = True
        follow = rospy.ServiceProxy(registry_name, RequestFollowers)
        follow("robot_" + self.bot_id)


# TODO -- ROS action server

# TODO -- waits for another action initiation


if __name__ == "__main__":
    rospy.init_node('robot_follower')
